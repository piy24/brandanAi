// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes LLM responses for mentions of the brand name, and provides a summary indicating whether the brand was mentioned in response to each prompt.
 *
 * - analyzeBrandMentions - A function that handles the brand mention analysis process.
 * - AnalyzeBrandMentionsInput - The input type for the analyzeBrandMentions function.
 * - AnalyzeBrandMentionsOutput - The return type for the analyzeBrandMentions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeBrandMentionsInputSchema = z.object({
  brandName: z.string().describe('The name of the brand to analyze.'),
  prompt: z.string().describe('The prompt that was used to generate the LLM response.'),
  llmResponse: z.string().describe('The LLM response to analyze for brand mentions.'),
});
export type AnalyzeBrandMentionsInput = z.infer<typeof AnalyzeBrandMentionsInputSchema>;

const AnalyzeBrandMentionsOutputSchema = z.object({
  isBrandMentioned: z.boolean().describe('Whether or not the brand is mentioned in the LLM response.'),
  reasoning: z.string().describe('The reasoning for why the brand is or is not mentioned in the LLM response.'),
});
export type AnalyzeBrandMentionsOutput = z.infer<typeof AnalyzeBrandMentionsOutputSchema>;

export async function analyzeBrandMentions(input: AnalyzeBrandMentionsInput): Promise<AnalyzeBrandMentionsOutput> {
  return analyzeBrandMentionsFlow(input);
}

const analyzeBrandMentionsPrompt = ai.definePrompt({
  name: 'analyzeBrandMentionsPrompt',
  input: {schema: AnalyzeBrandMentionsInputSchema},
  output: {schema: AnalyzeBrandMentionsOutputSchema},
  prompt: `You are an expert marketing analyst.

You are analyzing the following LLM response to see if it mentions the brand "{{brandName}}".

Prompt: {{prompt}}

LLM Response: {{llmResponse}}

Determine if the brand "{{brandName}}" is mentioned in the LLM response. It is possible that the brand is mentioned implicitly, so you must use reasoning to determine if the brand is mentioned.

Output your answer in JSON format.
`,
  model: 'googleai/gemini-1.5-flash',
});

const analyzeBrandMentionsFlow = ai.defineFlow(
  {
    name: 'analyzeBrandMentionsFlow',
    inputSchema: AnalyzeBrandMentionsInputSchema,
    outputSchema: AnalyzeBrandMentionsOutputSchema,
  },
  async input => {
    const {output} = await analyzeBrandMentionsPrompt(input);
    return output!;
  }
);
